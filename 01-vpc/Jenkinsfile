pipeline{
    agent{
        node{
               label' agent-1'  
        }
    }
    options{
         ansiColor('xterm')
         timeout(time: 1, unit: 'HOURS')
        disableConcurrentBuilds()
    }
   parameters {
      choice(name: 'action', choices: ['apply', 'destroy',], description: 'Pick something')

   }

    stages{
        stage( 'init') {
            steps {
                   sh """ 
                   cd 01-vpc 
                   terraform init -reconfigure
                   """
            }
        }


         stage( 'plan') {
            steps {
                   sh """ 
                   cd 01-vpc 
                   terraform plan
                   """
            }
       
        }

         stage( 'deploy') {
                 when {
                    expression { 
                        params.action == ' apply '
                 
                    }
                }
      


               input {
                message "Should we continue?"
                ok "Yes, we should."
                // submitter "alice,bob"
                // parameters {
                //     string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
                 }


            steps {
                   sh """ 
                   cd 01-vpc 
                   terraform apply -auto approve
                   """
            }
        }
      }
     
    post{
        always {
            echo " hello im using pipeline say again hello!"
        }
        failure {
            echo " whenerver pipeline gets error send me alerts"
        }
        success {
            echo ' I will always say Hello when pipeline is success '
        }
   }
}
